# 2-matrix_divided.txt


This module contains a matrix dividing function ``def matrix_divided(matrix, div)``

Usage
=====


``def matrix_divided(...)`` returns a new matrix with elements computed from the
division of each element of the ``matrix`` argument with the divisor ``div``.

**

	>>> md = __import__('2-matrix_divided').matrix_divided

	>>> matrix = [
	...    	   [1, 2, 3],
	...	   [4, 5, 6]
	... ]
	>>> new_matrix = md(matrix, 3)
	>>> print(new_matrix)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

A ZeroDivisionError message is displayed when the divisor is set to zero.

**

	>>> matrix = [
        ...        [1, 2, 3],
        ...        [4, 5, 6]
        ... ]
        >>>
        >>> new_matrix = md(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

The divisor ``div`` must be either an int or float value otherwise a TypeError
is raised with the message "div must be a number"

**

	>>> matrix = [
	...        [1, 2, 3],
	...        [4, 5, 6]
	... ]
	>>> new_matrix = md(matrix, 'betty')
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Each row of the matrix must be of the same size.

**
	>>> matrix = [
	...        [1, 2, 3],
	...        [4, 5, 6],
	...	   [7, 8, 9, 0]
	... ]
	>>> new_matrix = md(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Matrix can contain both float and integer values.

**
	>>> matrix = [
	...        [3.3, 6.18, 2],
	...        [4.8, 51, 48]
	... ]
	>>> new_matrix = md(matrix, 3)
	>>> print(new_matrix)
	[[1.1, 2.06, 0.67], [1.6, 17.0, 16.0]]

Matrix must be a list

**

	>>> matrix = md(57, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

**

	>>> matrix = md({1, 2, 3}, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix must be a list of list

**

	>>> matrix = md([1, 2, 3], 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

The matrix must contain ONLY float or int values

**

	>>> matrix = [
	... 	   [1.2, 2.4, 3.6],
	...	   [4.8, '5.10', 6.12]
	... ]
	>>> new_matrix = md(matrix, 3)
    	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

**

	>>> matrix = [
	... 	   [1.2, 3, 3.6],
	...	   [(1, 3.0), 4.7, 3]
	... ]
	>>> new_matrix = md(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
