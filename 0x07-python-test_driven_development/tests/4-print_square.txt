# 4-print_square.txt

This module defines a square printing function ``def print_square(size)``


Usage
=====

``def print_square(...)`` prints the square using the # character.

**

	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(4)
	####
	####
	####
	####

**

	>>> print_square(1)
	#

**

	>>> print_square(0)


Argument can only be positive integer

**

	 >>> print_square(-4)
	 Traceback (most recent call last):
	 ValueError: size must be >= 0

**

	>>> print_square(4.0)
	Traceback (most recent call last):
	TypeError: size must be an integer

**

	>>> print_square("not an int")
	Traceback (most recent call last):
        TypeError: size must be an integer

**

	>>> print_square('#')
	Traceback (most recent call last):
	TypeError: size must be an integer

**

	>>> print_square([1, 2, 3])
	Traceback (most recent call last):
	TypeError: size must be an integer

**

	>>> print_square((1, 2, 3))
	Traceback (most recent call last):
	TypeError: size must be an integer

If no argument was passed

**

	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'

If more than one argument was passed.

**

   	>>> print_square(1, 3)
	Traceback (most recent call last):
	TypeError: print_square() takes 1 positional argument but 2 were given

**

	>>> print_square('#', 2)
	Traceback (most recent call last):
	TypeError: print_square() takes 1 positional argument but 2 were given
